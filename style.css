// Google Apps Script endpoint URL
const SCRIPT_URL = 'https://script.google.com/macros/s/AKfycbx-kTIErFXAnuHK70NCmm4sXeggZHFkLFZtqYeeimesOzCj7u6Ymi76QafH3ZM7NSIzYw/exec';

// DOM Elements
const themeToggle = document.querySelector('.theme-toggle');
const searchInput = document.getElementById('search-input');
const lettersContainer = document.getElementById('letters-container');
const newLetterBtn = document.getElementById('new-letter-btn');
const newLetterModal = document.getElementById('new-letter-modal');
const viewLetterModal = document.getElementById('view-letter-modal');
const closeModalBtns = document.querySelectorAll('.close-modal');
const cancelLetterBtn = document.getElementById('cancel-letter');
const newLetterForm = document.getElementById('new-letter-form');

// Global variables
let letters = [];

// Initialize the application
document.addEventListener('DOMContentLoaded', () => {
    // Set up theme toggling
    themeToggle.addEventListener('click', toggleTheme);
    checkThemePreference();
    
    // Check if current page is letters.html
    if (window.location.pathname.includes('letters.html')) {
        fetchLetters();
        setupLettersPageEvents();
    }
    
    // Smooth scrolling for navigation links
    setupSmoothScrolling();
});

// Theme toggling functionality
function toggleTheme() {
    document.body.classList.toggle('dark-mode');
    const themeIcon = themeToggle.querySelector('i');
    
    if (document.body.classList.contains('dark-mode')) {
        themeIcon.classList.remove('fa-moon');
        themeIcon.classList.add('fa-sun');
        localStorage.setItem('theme', 'dark');
    } else {
        themeIcon.classList.remove('fa-sun');
        themeIcon.classList.add('fa-moon');
        localStorage.setItem('theme', 'light');
    }
}

// Check saved theme preference
function checkThemePreference() {
    const savedTheme = localStorage.getItem('theme');
    const themeIcon = themeToggle.querySelector('i');
    
    if (savedTheme === 'dark') {
        document.body.classList.add('dark-mode');
        themeIcon.classList.remove('fa-moon');
        themeIcon.classList.add('fa-sun');
    }
}

// Fetch letters from Google Apps Script
function fetchLetters() {
    if (!lettersContainer) return;
    
    showLoading();
    
    fetch(SCRIPT_URL)
        .then(response => response.json())
        .then(data => {
            // Convert message data to letter format
            letters = data.map((item, index) => {
                // Parse the message content to extract subject, sender and content
                // Assuming message format is JSON string: {subject: "...", sender: "...", content: "..."}
                let messageDetails;
                try {
                    messageDetails = JSON.parse(item.message);
                } catch (e) {
                    messageDetails = {
                        subject: 'Unknown Subject',
                        sender: 'Unknown Sender',
                        content: item.message || 'No content available'
                    };
                }
                
                return {
                    id: index,
                    date: new Date(item.timestamp).toLocaleDateString(),
                    subject: messageDetails.subject || 'No Subject',
                    sender: messageDetails.sender || 'Unknown Sender',
                    content: messageDetails.content || 'No content available'
                };
            });
            
            displayLetters(letters);
        })
        .catch(error => {
            showError('Failed to fetch letters', error);
        });
}

// Display letters in the UI
function displayLetters(lettersToDisplay) {
    if (!lettersContainer) return;
    
    lettersContainer.innerHTML = '';
    
    if (lettersToDisplay.length === 0) {
        lettersContainer.innerHTML = `
            <div class="no-letters">
                <i class="fas fa-envelope-open"></i>
                <p>No letters found. Try a different search or add a new letter.</p>
            </div>
        `;
        return;
    }
    
    lettersToDisplay.forEach(letter => {
        const letterCard = document.createElement('div');
        letterCard.className = 'letter-card';
        letterCard.dataset.id = letter.id;
        
        letterCard.innerHTML = `
            <h3 class="letter-subject">${letter.subject}</h3>
            <div class="letter-details">
                <span><i class="fas fa-calendar-alt"></i> ${letter.date}</span>
                <span><i class="fas fa-user"></i> ${letter.sender}</span>
            </div>
            <p class="letter-content">${letter.content.substring(0, 150)}${letter.content.length > 150 ? '...' : ''}</p>
        `;
        
        letterCard.addEventListener('click', () => {
            openViewLetterModal(letter);
        });
        
        lettersContainer.appendChild(letterCard);
    });
}

// Search/filter letters
function setupLettersPageEvents() {
    if (!searchInput || !newLetterBtn || !newLetterForm) return;
    
    // Setup search functionality
    searchInput.addEventListener('input', () => {
        const searchTerm = searchInput.value.toLowerCase();
        
        const filteredLetters = letters.filter(letter => {
            return letter.subject.toLowerCase().includes(searchTerm) ||
                   letter.sender.toLowerCase().includes(searchTerm) ||
                   letter.date.toLowerCase().includes(searchTerm) ||
                   letter.content.toLowerCase().includes(searchTerm);
        });
        
        displayLetters(filteredLetters);
    });
    
    // Setup new letter modal
    newLetterBtn.addEventListener('click', () => {
        newLetterModal.style.display = 'block';
    });
    
    closeModalBtns.forEach(btn => {
        btn.addEventListener('click', () => {
            newLetterModal.style.display = 'none';
            viewLetterModal.style.display = 'none';
        });
    });
    
    cancelLetterBtn.addEventListener('click', () => {
        newLetterModal.style.display = 'none';
    });
    
    // Setup form submission
    newLetterForm.addEventListener('submit', (e) => {
        e.preventDefault();
        
        const letterSubject = document.getElementById('letter-subject').value;
        const letterSender = document.getElementById('letter-sender').value;
        const letterContent = document.getElementById('letter-content').value;
        
        // Create message object
        const messageObj = {
            subject: letterSubject,
            sender: letterSender,
            content: letterContent
        };
        
        // Send to Google Apps Script
        submitLetter(messageObj);
    });
    
    // Close modals when clicking outside content
    window.addEventListener('click', (e) => {
        if (e.target === newLetterModal) {
            newLetterModal.style.display = 'none';
        }
        if (e.target === viewLetterModal) {
            viewLetterModal.style.display = 'none';
        }
    });
}

// Submit new letter to Google Apps Script
function submitLetter(messageObj) {
    const messageString = JSON.stringify(messageObj);
    
    fetch(SCRIPT_URL, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ message: messageString })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.text();
    })
    .then(() => {
        // Reset form and close modal
        newLetterForm.reset();
        newLetterModal.style.display = 'none';
        
        // Refresh letters
        fetchLetters();
        
        // Show success message
        showNotification('Letter submitted successfully!', 'success');
    })
    .catch(error => {
        showError('Failed to submit letter', error);
    });
}

// Open view letter modal
function openViewLetterModal(letter) {
    const modalSubject = document.getElementById('modal-letter-subject');
    const modalDate = document.getElementById('modal-letter-date');
    const modalSender = document.getElementById('modal-letter-sender');
    const modalContent = document.getElementById('modal-letter-content');
    
    modalSubject.textContent = letter.subject;
    modalDate.textContent = letter.date;
    modalSender.textContent = letter.sender;
    modalContent.textContent = letter.content;
    
    viewLetterModal.style.display = 'block';
}

// Show loading state
function showLoading() {
    if (!lettersContainer) return;
    
    lettersContainer.innerHTML = `
        <div class="loading">
            <i class="fas fa-spinner fa-pulse"></i>
            <p>Loading letters...</p>
        </div>
    `;
}

// Show error message
function showError(message, error) {
    console.error(message, error);
    
    if (lettersContainer) {
        lettersContainer.innerHTML = `
            <div class="error-message">
                <i class="fas fa-exclamation-circle"></i>
                <p>${message}</p>
                <button class="btn-primary retry-btn">Try Again</button>
            </div>
        `;
        
        const retryBtn = document.querySelector('.retry-btn');
        if (retryBtn) {
            retryBtn.addEventListener('click', fetchLetters);
        }
    }
    
    showNotification(message, 'error');
}

// Show notification
function showNotification(message, type = 'info') {
    const notification = document.createElement('div');
    notification.className = `notification ${type}`;
    notification.innerHTML = `
        <p>${message}</p>
        <button class="close-notification">&times;</button>
    `;
    
    document.body.appendChild(notification);
    
    // Auto remove after 5 seconds
    setTimeout(() => {
        notification.classList.add('fade-out');
        setTimeout(() => {
            notification.remove();
        }, 500);
    }, 5000);
    
    // Close button
    const closeBtn = notification.querySelector('.close-notification');
    closeBtn.addEventListener('click', () => {
        notification.remove();
    });
}

// Setup smooth scrolling
function setupSmoothScrolling() {
    document.querySelectorAll('a[href^="#"]').forEach(anchor => {
        anchor.addEventListener('click', function(e) {
            e.preventDefault();
            
            const targetId = this.getAttribute('href').substring(1);
            const targetElement = document.getElementById(targetId);
            
            if (targetElement) {
                window.scrollTo({
                    top: targetElement.offsetTop - 70,
                    behavior: 'smooth'
                });
            }
        });
    });
}
